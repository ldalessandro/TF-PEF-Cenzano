        -:    0:Source:../../HuffmanOriginal/FilaDePrioridad.cpp
        -:    0:Programs:42
        -:    1:#include "FilaDePrioridad.h"
        -:    2:
    #####:    3:FilaDePrioridad::FilaDePrioridad()
        -:    4:{
    #####:    5:    frente = 0;
    #####:    6:}
        -:    7:
        -:    8:
    #####:    9:FilaDePrioridad::~FilaDePrioridad()
        -:   10:{
    #####:   11:   while (frente)
        -:   12:   {
    #####:   13:      Nodo *p = frente;
    #####:   14:      frente = frente->getNext();
    #####:   15:      delete p;
        -:   16:   }
    #####:   17:}
        -:   18:
    #####:   19:Nodo * FilaDePrioridad::getFrente()
        -:   20:{
    #####:   21:    return frente;
        -:   22:}
        -:   23:
    #####:   24:void FilaDePrioridad::insertar (Comparable *nuevo)
        -:   25:{
        -:   26:   // insertar ordenado
    #####:   27:   if ( nuevo )
        -:   28:   {
    #####:   29:       if ( frente && typeid( *nuevo ) != typeid( * ( frente->getInfo() )  ) ) return;
    #####:   30:       Nodo *nue = new Nodo (nuevo, 0);
    #####:   31:       if (nue)
        -:   32:       {
    #####:   33:           Nodo *p = frente, *q = 0;
    #####:   34:           while(p && nuevo->compareTo(p->getInfo()) > 0)
        -:   35:           {
    #####:   36:               q = p;
    #####:   37:               p = p->getNext();
        -:   38:           }
    #####:   39:           nue->setNext(p);
    #####:   40:           if(q) q->setNext(nue);
    #####:   41:           else frente = nue;
        -:   42:       }
        -:   43:   }
        -:   44:}
        -:   45:
    #####:   46:Comparable * FilaDePrioridad::borrar ()
        -:   47:{
    #####:   48:   if (frente == 0) return 0;
    #####:   49:   Comparable *x = (Comparable *)frente->getInfo();
    #####:   50:   Nodo *p = frente;
    #####:   51:   frente = frente->getNext();
    #####:   52:   delete p;
    #####:   53:   return x;
       36:   54:}
